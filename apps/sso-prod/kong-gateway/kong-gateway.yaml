apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-gateway
  labels:
    app: kong-gateway
  namespace: sso-prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong-gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  revisionHistoryLimit: 4
  template:
    metadata:
      labels:
        app: kong-gateway
    spec:
      containers:
      - image: 405906814034.dkr.ecr.ap-northeast-2.amazonaws.com/sso-prod/kong-gateway:1
        name: kong-gateway
        ports:
        - containerPort: 8000
          name: proxy
          protocol: TCP
        - containerPort: 8100
          name: metrics
          protocol: TCP
        env:
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_DECLARATIVE_CONFIG
          value: /etc/kong/kong-config.yaml
        - name: KONG_PROXY_LISTEN
          value: 0.0.0.0:8000
        - name: KONG_PORT_MAPS
          value: 80:8000
        - name: KONG_STATUS_LISTEN
          value: 0.0.0.0:8100
        - name: KONG_ADMIN_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_PROXY_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_ADMIN_ERROR_LOG
          value: /dev/stderr
        - name: KONG_PROXY_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ROUTER_FLAVOR
          value: traditional
        - name: KONG_LOG_LEVEL
          value: debug
        volumeMounts:
        - name: kong-config
          mountPath: /etc/kong
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: 8100
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: 8100
            scheme: HTTP
      volumes:
      - name: kong-config
        configMap:
          name: kong-config
---
apiVersion: v1
kind: Service
metadata:
  namespace: sso-prod
  name: kong-gateway
spec:
  type: ClusterIP
  selector:
    app: kong-gateway
  ports:
  - port: 80
    targetPort: 8000
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  namespace: sso-prod
  name: kong-gateway
spec:
  gateways:
  - istio-ingress/waffle-ingressgateway
  - mesh
  hosts:
  - api-gateway.wafflestudio.com
  - sso.wafflestudio.com
  - truffle.wafflestudio.com
  http:
  - route:
    - destination:
        host: kong-gateway
