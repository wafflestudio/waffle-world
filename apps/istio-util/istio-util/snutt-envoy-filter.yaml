apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  namespace: istio-ingress
  name: dev-snutt-trailing-slash-filter
spec:
  configPatches:
  - applyTo: HTTP_ROUTE
    match:
      context: GATEWAY
      routeConfiguration:
        vhost:
          route:
            name: dev-snutt-timetable-route
    patch:
      operation: MERGE
      value:
        name: envoy.lua
        typed_per_filter_config:
          envoy.filters.http.lua:
            '@type': type.googleapis.com/envoy.extensions.filters.http.lua.v3.LuaPerRoute
            source_code:
              inline_string: |
                function envoy_on_request(request_handle)
                  local path = request_handle:headers():get(":path")
                  local path_without_trailing_slash = string.match(path, "(.*)/$")
                  if path_without_trailing_slash ~= nil
                  then
                    request_handle:headers():replace(":path", path_without_trailing_slash)
                  end
                end
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  namespace: istio-ingress
  name: prod-snutt-trailing-slash-filter
spec:
  configPatches:
  - applyTo: HTTP_ROUTE
    match:
      context: GATEWAY
      routeConfiguration:
        vhost:
          route:
            name: prod-snutt-timetable-route
    patch:
      operation: MERGE
      value:
        name: envoy.lua
        typed_per_filter_config:
          envoy.filters.http.lua:
            '@type': type.googleapis.com/envoy.extensions.filters.http.lua.v3.LuaPerRoute
            source_code:
              inline_string: |
                function envoy_on_request(request_handle)
                  local path = request_handle:headers():get(":path")
                  local path_without_trailing_slash = string.match(path, "(.*)/$")
                  if path_without_trailing_slash ~= nil
                  then
                    request_handle:headers():replace(":path", path_without_trailing_slash)
                  end
                end
